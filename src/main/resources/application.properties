# Server Configuration
server.port=8080

# Database Configuration
# Local development (or production if you're using MySQL on Render)
# Replace these with your actual database credentials
spring.datasource.url=jdbc:mysql://${DB_HOST}:3306/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# JPA Configuration (For MySQL)
spring.jpa.hibernate.ddl-auto=update   # Automatically updates schema, use 'validate' in production
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# SQL Initialization
spring.sql.init.mode=always   # This ensures that SQL scripts are run
spring.sql.init.schema-locations=classpath:schema.sql  # If you have schema.sql for DB schema initialization
spring.sql.init.data-locations=classpath:data.sql     # If you have data.sql for initial data insertion

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# JWT Configuration
jwt.secret=VGhpcyBpcyBhIHNlY3JldCBrZXkgZm9yIEpXVCB0b2tlbiBnZW5lcmF0aW9u
# 24 hours in milliseconds
jwt.expiration=86400000

# Logging Configuration (Optional, useful for debugging security issues)
logging.level.org.springframework.security=DEBUG
logging.level.com.jobportal=DEBUG

# Security Configuration
spring.security.filter.order=10

# If using Render or an external DB, update these below:
# spring.datasource.url=jdbc:mysql://<your-db-host>:3306/<dbname>
# spring.datasource.username=<your-db-user>
# spring.datasource.password=<your-db-password>
