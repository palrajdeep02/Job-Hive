# Server Configuration
server.port=8080

# Database Configuration (Docker + Render)
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:your_db_name}?useSSL=false&serverTimezone=UTC
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration (For MySQL)
spring.jpa.hibernate.ddl-auto=update   # Automatically updates schema, use 'validate' in production
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# SQL Initialization (Optional - Only for Local Testing)
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# JWT Configuration (For Security)
jwt.secret=${JWT_SECRET:VGhpcyBpcyBhIHNlY3JldCBrZXkgZm9yIEpXVCB0b2tlbiBnZW5lcmF0aW9u}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Logging Configuration (Optional, useful for debugging security issues)
logging.level.org.springframework.security=DEBUG
logging.level.com.jobportal=DEBUG

# Security Configuration
spring.security.filter.order=10
